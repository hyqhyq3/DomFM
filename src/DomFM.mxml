<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark" windowComplete="windowedapplication1_windowCompleteHandler(event)"
					   xmlns:mx="library://ns.adobe.com/flex/mx" showStatusBar="false"
					   width="420" height="185" backgroundColor="#CFCFCF" initialize="windowedapplication1_initializeHandler(event)">
	<fx:Style source="style.css"/>
	<fx:Script>
		<![CDATA[
			import com.domlib.domFM.action.ID3Parser;
			import com.domlib.domFM.action.Player;
			import com.domlib.domFM.data.ID3Tag;
			import com.domlib.domFM.events.ID3Event;
			import com.domlib.domFM.events.PlayEvent;
			import com.domlib.domFM.utils.FileUtil;
			import com.domlib.domFM.utils.SQL;
			import com.domlib.domFM.utils.SharedObjectTool;
			import com.domlib.domFM.utils.StringUtil;
			
			import mx.charts.AreaChart;
			import mx.events.AIREvent;
			import mx.events.FlexEvent;
			import mx.events.FlexNativeWindowBoundsEvent;
			
			
			protected function windowedapplication1_initializeHandler(event:FlexEvent):void
			{
				this.nativeApplication.addEventListener(Event.EXITING,onExiting);
			}
			/**
			 * 应用程序退出
			 */	
			protected function onExiting(event:Event):void
			{
				if(player)
				{
					player.exit();
				}
				if(id3Parser)
					id3Parser.exit();
			}
			
			private var player:Player;
			/**
			 * 播放下一首
			 */	
			private function playNext():void
			{
				if(!player)
				{
					player = new Player();
					player.addEventListener(PlayEvent.PLAY_COMPLETE,onPlayComp);
					player.addEventListener(PlayEvent.PLAY_PROGRESS,onPlayProgress);
				}
				var song:Object = getSongByRandom();
				if(song&&song.url)
				{
					var url:String = getPortableUrl(song.url);
					if(!url)
					{
						playNext();
						return;
					}
					player.playSong(url);
					titleLabel.text = song.title+" - "+song.artist;
					title = song.title+" - DomFM";
					timeLabel.text = "00:00";
				}
			}
			
			private var driverLetters:Array = ["C","D","E","F","G","H","I","J","K","L"];
			
			private function getPortableUrl(url:String):String
			{
				try
				{
					if(new File(url).exists)
						return url;
				}
				catch(e:Error){}
				
				url = url.substring(1);
				for each(var letter:String in driverLetters)
				{
					if(new File(letter+url).exists)
						return letter+url;
				}
				return "";
			}
			/**
			 * 获取一条音乐记录
			 */	
			private function getSongByRandom():Object
			{
				var result:Array = sql.execute("select  Min(count) as count From  song");
				var minCount:Number = Number(result[0].count);
				if(isNaN(minCount))
					minCount = 0;
				result = sql.execute("select * from song where count="+minCount+" order by random() limit 1;");
				if(result)
					return result[0];
				return null;
			}
			/**
			 * 播放进度
			 */	
			private function onPlayProgress(event:PlayEvent):void
			{
				timeLabel.text = StringUtil.toTimeString(event.playedTime);
			}
			/**
			 * 一首歌播放完成
			 */	
			private function onPlayComp(event:PlayEvent):void
			{
				sql.execute("update song set count = count+1 where url='"+SQL.escape(event.url)+"';");
				playNext();
			}
			/**
			 * 跳过按钮点击
			 */	
			protected function skipBT_clickHandler(event:MouseEvent):void
			{
				playNext();
			}
			/**
			 * id3解析器
			 */	
			private var id3Parser:ID3Parser;
			/**
			 * 添加按钮点击
			 */	
			protected function addBtn_clickHandler(event:MouseEvent):void
			{
				FileUtil.browseForOpen(function(file:File):void{
					var list:Array = FileUtil.search(file.nativePath,null,filterFunc);
					var urlList:Array = [];
					for each(var file:File in list)
					{
						urlList.push(file.nativePath);
					}
					if(!id3Parser)
					{
						id3Parser = new ID3Parser;
						id3Parser.addEventListener(ID3Event.GET_ONE_INFO,onGetMusicInfo);
					}
					id3Parser.parse(urlList);
				},3);
			}
			
			private var sql:SQL = new SQL("music.db");
			/**
			 * 插入一条音乐记录到数据库
			 */	
			private function onGetMusicInfo(event:ID3Event):void
			{
				var result:Array = sql.execute("select title from song where url='"+SQL.escape(event.url)+"'");
				if(result&&result.length>0)
					return;
				var id3:ID3Tag = event.tagInfo;
				if(!id3.title)
				{
					id3.title = FileUtil.getFileName(event.url);
				}
				var type:String = FileUtil.getExtension(event.url);
				sql.execute("insert into song (title,artist,url,type,favor,count,skip) values('"+
					SQL.escape(id3.title)+"','"+SQL.escape(id3.artist)+"','"+SQL.escape(event.url)+"','"+
					SQL.escape(type)+"',0,0,0);");
				trace(id3.title,id3.artist);
			}
			
			/**
			 * 文件过滤回调函数
			 */	
			private function filterFunc(file:File):Boolean
			{
				if(file.isDirectory)
					return true;
				if(file.extension==null)
					return false;
				var extension:String = file.extension.toLowerCase();
				if(extension=="mp3"/*||extension=="m4a"||extension=="wma"*/)
					return true;
				return false;
			}
			
			protected function windowedapplication1_windowCompleteHandler(event:AIREvent):void
			{
				var windowX:Number = SharedObjectTool.read(applicationID,"windowX");
				var windowY:Number = SharedObjectTool.read(applicationID,"windowY");
				if(isNaN(windowX))
					windowX = (Capabilities.screenResolutionX - width)*0.5;
				if(isNaN(windowY))
					windowY = (Capabilities.screenResolutionY - height)*0.5;
				if(windowX+width>Capabilities.screenResolutionX)
					windowX = Capabilities.screenResolutionX-width;
				if(windowY+height>Capabilities.screenResolutionY)
					windowY = Capabilities.screenResolutionY-height;
				nativeWindow.x = windowX;
				nativeWindow.y = windowY;
				addEventListener(FlexNativeWindowBoundsEvent.WINDOW_MOVE,windowedapplication1_windowMoveHandler);
				playNext();
			}
			
			protected function windowedapplication1_windowMoveHandler(event:FlexNativeWindowBoundsEvent):void
			{
				SharedObjectTool.write(applicationID,"windowX",nativeWindow.x);
				SharedObjectTool.write(applicationID,"windowY",nativeWindow.y);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	<s:Image id="cover" x="33" y="33" width="120" height="120" scaleMode="zoom"/>
	<s:Group x="180" y="55" width="215" height="45">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#ddeee1"/>
			</s:fill>
		</s:Rect>
		<s:Label id="titleLabel" showTruncationTip="true" maxDisplayedLines="1" x="8" y="27" width="200" color="#666666" fontWeight="normal"/>
		<s:Label id="timeLabel" x="8" y="5" color="#666666" fontWeight="bold" text="00:00"/>
	</s:Group>
	<s:Button id="likeBT" x="200" y="115" width="45" height="45" label="喜欢"/>
	<s:Button id="skipBT" x="333" y="115" width="45" height="45" label="跳过" click="skipBT_clickHandler(event)"/>
	<s:Button id="banBT" x="267" y="115" width="45" height="45" label="垃圾"/>
	<s:Button x="364" y="10" width="46" label="添加" click="addBtn_clickHandler(event)"/>
</s:WindowedApplication>
